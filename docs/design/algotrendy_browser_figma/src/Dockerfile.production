# Build stage
FROM node:18-alpine as builder

WORKDIR /app

# Copy package files (from build context root)
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy all source files (from build context root)
COPY . ./

# Note: The following files are required:
# - src/ (source code)
# - index.html (entry point)
# - vite.config.ts (Vite configuration)
# Optional: public/, tsconfig.json, tsconfig.node.json

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine

# Copy built assets from builder (Vite outputs to 'build' directory)
COPY --from=builder /app/build /usr/share/nginx/html

# Copy nginx configuration (from build context root)
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy runtime config entrypoint script (from build context root)
COPY docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

# Environment variables (can be overridden at runtime)
ENV API_BASE_URL=/api \
    WS_BASE_URL="" \
    ENVIRONMENT=production \
    VERSION=2.6.0 \
    ENABLE_DEBUG=false

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --quiet --tries=1 --spider http://127.0.0.1:80/ || exit 1

# Use entrypoint script to generate runtime config and start nginx
ENTRYPOINT ["/docker-entrypoint.sh"]
