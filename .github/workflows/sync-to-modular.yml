name: Sync Main to Modular Branch

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  sync:
    name: Auto-sync to modular branch
    runs-on: ubuntu-latest
    # Only run if modular branch exists
    if: github.repository == 'KenyBoi/algotrendy-v2.6'

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check if modular branch exists
        id: check_branch
        run: |
          if git ls-remote --heads origin modular | grep -q modular; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Sync to modular branch
        if: steps.check_branch.outputs.exists == 'true'
        run: |
          # Fetch modular branch
          git fetch origin modular:modular

          # Checkout modular branch
          git checkout modular

          # Attempt to merge main into modular
          if git merge origin/main -m "chore: sync from main branch

          Auto-synced changes from main branch.

          🤖 Generated by GitHub Actions"; then
            echo "✅ Merge successful"
            git push origin modular
          else
            echo "⚠️  Merge conflicts detected"
            git merge --abort

            # Create PR for manual conflict resolution
            gh pr create \
              --base modular \
              --head main \
              --title "🔄 Sync conflicts from main to modular" \
              --body "**Automated sync encountered conflicts**

          The automated sync from \`main\` to \`modular\` branch encountered merge conflicts that require manual resolution.

          ## Conflicts
          Please review and resolve the conflicts manually, then merge this PR.

          ## How to resolve
          \`\`\`bash
          git checkout modular
          git merge main
          # Resolve conflicts
          git add .
          git commit
          git push origin modular
          \`\`\`

          🤖 Auto-generated by sync workflow" || echo "PR may already exist"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sync summary
        if: steps.check_branch.outputs.exists == 'true'
        run: |
          echo "## Sync to Modular Branch" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** Completed" >> $GITHUB_STEP_SUMMARY
          echo "**Source:** main" >> $GITHUB_STEP_SUMMARY
          echo "**Target:** modular" >> $GITHUB_STEP_SUMMARY

      - name: Skip - modular branch not created yet
        if: steps.check_branch.outputs.exists == 'false'
        run: |
          echo "⏭️  Skipping sync - modular branch does not exist yet" >> $GITHUB_STEP_SUMMARY
          echo "This workflow will activate automatically once the modular branch is created in Phase 3" >> $GITHUB_STEP_SUMMARY
