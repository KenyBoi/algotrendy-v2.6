version: '3.8'

# ============================================================================
# AlgoTrendy v2.6 - Docker Compose Configuration
# ============================================================================
# Services:
#   - api: .NET 8 API (AlgoTrendy.API)
#   - questdb: Time-series database
#   - nginx: Reverse proxy with SSL termination
# ============================================================================

networks:
  algotrendy-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  questdb_data:
    driver: local
  api_logs:
    driver: local
  nginx_ssl:
    driver: local

services:
  # ==========================================================================
  # QuestDB - Time-Series Database
  # ==========================================================================
  questdb:
    image: questdb/questdb:latest
    container_name: algotrendy-questdb
    restart: unless-stopped
    networks:
      algotrendy-network:
        ipv4_address: 172.20.0.10
    ports:
      # HTTP API and Web Console
      - "9000:9000"
      # PostgreSQL wire protocol (used by API)
      - "8812:8812"
      # InfluxDB line protocol
      - "9009:9009"
    volumes:
      - questdb_data:/var/lib/questdb
    environment:
      - QDB_TELEMETRY_ENABLED=false
      - QDB_PG_USER=${QUESTDB_USER:-admin}
      - QDB_PG_PASSWORD=${QUESTDB_PASSWORD:-quest}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================================================
  # AlgoTrendy API - .NET 8 Application
  # ==========================================================================
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: algotrendy-api:v2.6
    container_name: algotrendy-api
    restart: unless-stopped
    depends_on:
      - questdb
    networks:
      algotrendy-network:
        ipv4_address: 172.20.0.20
    ports:
      - "5002:5002"
    volumes:
      - api_logs:/app/logs
    environment:
      # Application Settings
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Production}
      - ASPNETCORE_URLS=http://+:5002

      # Database Connection
      - ConnectionStrings__QuestDB=Host=questdb;Port=8812;Database=qdb;Username=${QUESTDB_USER:-admin};Password=${QUESTDB_PASSWORD:-quest}

      # Logging
      - Serilog__MinimumLevel__Default=${API_LOG_LEVEL:-Information}

      # Binance API (from .env file)
      - Binance__ApiKey=${BINANCE_API_KEY:-}
      - Binance__ApiSecret=${BINANCE_API_SECRET:-}
      - Binance__UseTestnet=${BINANCE_TESTNET:-true}

      # CORS Settings
      - AllowedOrigins=${ALLOWED_ORIGINS:-http://localhost:3000,https://localhost}

      # Market Data Settings
      - MarketData__FetchIntervalSeconds=${MARKET_DATA_FETCH_INTERVAL:-60}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================================================
  # Nginx - Reverse Proxy with SSL Termination
  # ==========================================================================
  nginx:
    image: nginx:alpine
    container_name: algotrendy-nginx
    restart: unless-stopped
    depends_on:
      - api
    networks:
      algotrendy-network:
        ipv4_address: 172.20.0.30
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_ssl:/etc/letsencrypt:ro
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
