# ============================================================================
# AlgoTrendy v2.6 - Nginx Configuration
# ============================================================================
# Features:
#   - Reverse proxy to .NET API
#   - HTTP to HTTPS redirect
#   - SSL/TLS termination
#   - Security headers
#   - Gzip compression
#   - WebSocket support for SignalR
# ============================================================================

# Worker processes
worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml font/truetype font/opentype
               application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";

    # Rate Limiting (Optional)
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
    limit_req_status 429;

    # Upstream for API
    upstream api_backend {
        server api:5002;
        keepalive 32;
    }

    # ========================================================================
    # HTTP Server - Redirect to HTTPS
    # ========================================================================
    server {
        listen 80;
        listen [::]:80;
        server_name algotrendy.com www.algotrendy.com api.algotrendy.com app.algotrendy.com;

        # Allow Let's Encrypt validation
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Health check endpoint (no redirect)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # ========================================================================
    # HTTPS Server - Main Configuration
    # ========================================================================
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name algotrendy.com www.algotrendy.com api.algotrendy.com app.algotrendy.com;

        # SSL Certificate Configuration
        # For production, use Let's Encrypt certificates
        # For development/testing, use self-signed certificates
        # Production Let's Encrypt paths (uncomment when ready):
        # ssl_certificate /etc/letsencrypt/live/algotrendy.com/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/algotrendy.com/privkey.pem;
        # Development/testing self-signed certificates:
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # SSL Security Settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;

        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;

        # SSL Stapling (disable if using self-signed)
        # ssl_stapling on;
        # ssl_stapling_verify on;
        # ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # ====================================================================
        # Health Check Endpoint
        # ====================================================================
        location /health {
            access_log off;
            proxy_pass http://api_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # ====================================================================
        # SignalR WebSocket Hub
        # ====================================================================
        location /hubs/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # WebSocket timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 60s;

            # Buffering
            proxy_buffering off;
            proxy_cache_bypass $http_upgrade;
        }

        # ====================================================================
        # API Endpoints
        # ====================================================================
        location /api/ {
            # Rate limiting (optional)
            # limit_req zone=api_limit burst=20 nodelay;

            proxy_pass http://api_backend;
            proxy_http_version 1.1;

            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Connection keep-alive
            proxy_set_header Connection "";

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 90s;
            proxy_read_timeout 90s;

            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # ====================================================================
        # Swagger UI (Development/Staging Only)
        # ====================================================================
        location /swagger/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Connection "";
        }

        # ====================================================================
        # Root Path - Redirect to Swagger or API Info
        # ====================================================================
        location / {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Connection "";
        }

        # ====================================================================
        # Static Files (if needed in future)
        # ====================================================================
        # location /static/ {
        #     alias /var/www/static/;
        #     expires 30d;
        #     add_header Cache-Control "public, immutable";
        # }
    }
}
